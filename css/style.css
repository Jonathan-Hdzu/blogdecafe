:root {
    --fuenteHeading: 'PT Sans', sans-serif;
    --fuenteParrafos: 'Open Sans', sans-serif;
    --primario: #784D3C;
    --blanco: #ffffff;
    --negro: #000000;
    --claro: #e1e1e1;
}

html {
    /* Para hacer que el border, padding no afecte el ancho de nuestros elementos */
    box-sizing: border-box;
    font-size: 62.5%; /* 1 rem = 10px */
}
*, *::before, *::after {
    /* Esto hereda del elemento padre, tiene la ventaja si se utiliza en otro selector va a heredar de ese otro*/
    box-sizing: inherit;
}
body {
    font-family: var(--fuenteParrafos);
    font-size: 1.6rem;
    /* En los blogs siempre hace buen sentido tener un interlineado mucho mas grandes para poder leer mejor el contenido*/
    line-height: 2;
}

/** Globales  **/
/* Lo que se va a utilizar mas de una vez se coloca como globales */
/* Este proyecto utiliza BEM pero estara utilizando mas utilidades que proyectos anteriores */
/* Tiene un width de 90% porque si hacemos mas pequeño el display como de un telefono el texto se iria hasta los bordes si tiene un 100%, por esto es que decimos que tendra un 90% */
.contenedor {
    /* max-width: 120rem;
    width: 90%; */
    /* Esta linea de aca resume las 2 anteriores, nos dice que aplicara el valor segun el tamaño, es decir, si nuestra pantalla esta completa tomara el valor inferior que en este caso es 120rem frente al 90%, pero si nuestra pantalla es como la de un telefono entonces el valor sera de 500px, lo compara cual es menor y lo aplica*/
    width: min(90%, 120rem);
    margin: 0 auto; /*Para centrar el contenido horizontalmente dado que no tendremos un display flex para centrarlo. Se centrara por si mismo con esta propiedad */
}
* {
    text-decoration: none;
}

h1, h2, h3, h4 {
    font-family: var(--fuenteHeading);
}

h1 {
    font-size: 4.8rem;
}
h2 {
    font-size: 4rem;
}
h3 {
    font-size: 3.2rem;
}
h4 {
    font-size: 2.8rem;
}

img {
    max-width: 100%;
}

/** Utilidades **/ 

/* El navegador normalmente agrega algunos margenes y padding por default, entonces con esta utilidad los eliminamos para modificarlos */
.no-margin {
    margin: 0;
}
.no-padding {
    padding: 0;
}
/* Se pueden hacer para distintas posiciones pero en este proyecto solo necesitamos centrar */
.centrar-texto {
    text-align: center;
}

/** Header **/ 
.header {
    background-image: url(../img/banner.jpg);
    height: 45rem;
    /* La imagen de fondo se ajusta automáticamente para cubrir completamente el área del elemento, sin distorsionarla y manteniendo la relación de aspecto original. */
    background-size: cover;
    background-repeat: no-repeat;
    /* Por que doble center? una imagen se tiene que centrar vertical y horizontalmente, el primer valor permite adaptarlo horizontalmente. Cuando se tiene un cover normalmente se deja como center en ambas direcciones. Toma 3 valores, right, left, center. En el caso de center siempre mostrara la parte central de la imagen aunque la imagen sea editada sin cover con un tamaño inferior. Tambien se puede usar valores pero son un poco menos exactos o no son tan utiles*/
    background-position: center center;
}
.header__texto {
    text-align: center;
    color: var(--blanco);
    margin-top: 4rem;

}
 @media (min-width: 768px) {
    .header__texto {
        margin-top: 8rem;
    }
}

@media (min-width: 768px) {
    .barra {
    /* Acomodando elementos dentro de un mismo bloque es mas facil usar flexbox */
    display: flex;
    /* Para hacer que la barra de navegacion tenga los elementos separados, pero quedan disparejos de altura */
    justify-content: space-between;
    /* Para ello usamos align para alinear verticalmente */
    align-items: center;
    }
}
.logo {
    color: var(--blanco);
}
.logo__nombre {
    font-weight: 400;
}
.logo__bold {
    font-weight: 700;
}

@media (min-width: 768px) {
    .navegacion {
        /* Los elementos se alinean de izquierda a derecha */
        display: flex;
        gap: 2rem;
    }
}
.navegacion__enlace {
    /* Para que los elementos esten uno debajo del otro  */
    display: block;
    text-align: center;
    font-size: 1.8rem;
    color: var(--blanco);
}

@media (min-width: 768px) {
    .contenido-principal {
        display: grid;
        /* Como en nuestro diseño la seccion del main debe ser mas ancho ponemos que use 2 terceras partes y que el aside 1 */
        grid-template-columns: 2fr 1fr;
        column-gap: 4rem;
    }
}

.entrada {
    border-bottom: 1px solid var(--claro);
    margin-bottom: 2rem;
}
/* En este caso como tenemos 3 article y queremos eliminar la linea y el margen */
.entrada:last-of-type {
    border: none;
    margin-bottom: 0;
}

/* Este block es porque en dispositivos con pantalla menos ancha queremos que tome todo el espacio disponible */
.boton {
    display: block;
    font-family: var(--fuenteHeading);
    color: var(--blanco);
    text-align: center;
    /* 1 rem arriba y abajo y 3 rem en la izquierda y derecha */
    padding: 1rem 3rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
}
@media (min-width: 768px) {
    .boton {
        /* los display inline son inmunes al width y al margin, por eso ponemos inline-block. En comparación con display: inline, la principal diferencia es que display: inline-block permite establecer un ancho y alto en el elemento.

        Además, con display: inline-block, se respetan los márgenes/rellenos superior e inferior, pero con display: inlineno. En comparación con display: block, la principal diferencia es que display: inline-block no agrega un salto de línea después del elemento, por lo que el elemento puede ubicarse junto a otros elementos.*/
        display: inline-block;

    }
}


.boton--primario {
    background-color: var(--negro);
}
/* el doble guion en BEM dice que esta heredando algo pero que algo va a cambiar */
.boton--secundario {
    background-color: var(--primario);
}
.cursos {
    list-style: none;
}
.widget-curso{
    border-bottom: 1px solid var(--claro);
    margin-bottom: 2rem;
}
/* Esto es dinamico porque si se agrega otro curso mas no afectar esta propiedad */
.widget-curso:last-of-type {
    border: none;
    margin-bottom: 0;
}
.widget-curso__label {
    font-family: var(--fuenteHeading);
    font-weight: bold;
}
.widget-curso__info {
    font-weight: normal;
}
.widget-curso__label,
.widget-curso__info {
    font-size: 2rem;
}

/** Footer **/
.footer {
    background-color: var(--negro);
    padding: 1rem 0;
   
}
